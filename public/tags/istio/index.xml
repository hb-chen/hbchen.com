<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on HB-技术实践</title>
    <link>http://hbchen.com/tags/istio/</link>
    <description>Recent content in Istio on HB-技术实践</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>HB Studio &lt;a href=&#34;https://beian.miit.gov.cn/&#34; target=&#34;_blank&#34;&gt;蜀ICP备18021614号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 22 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://hbchen.com/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Istio】Rust 开发 wasm 扩展</title>
      <link>http://hbchen.com/post/servicemesh/2020-05-22-istio-wasm-rust/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2020-05-22-istio-wasm-rust/</guid>
      <description>&lt;p&gt;Istio &lt;strong&gt;1.5&lt;/strong&gt; 开始支持在数据面支持&lt;code&gt;Wasm&lt;/code&gt;扩展，相关规范以及SDK在&lt;a href=&#34;https://github.com/proxy-wasm&#34;&gt;proxy-wasm&lt;/a&gt;，目前提供有三种 SDK 实现，分别是&lt;code&gt;C++&lt;/code&gt;、&lt;code&gt;Rust&lt;/code&gt;和&lt;code&gt;AssemblyScript&lt;/code&gt;，其中&lt;code&gt;AssemblyScript&lt;/code&gt;在&lt;a href=&#34;https://github.com/solo-io/proxy-runtime&#34;&gt;solo-io/proxy-runtime&lt;/a&gt;。除了 SDK Solo 还发布了 &lt;a href=&#34;https://webassemblyhub.io/&#34;&gt;WebAssembly Hub&lt;/a&gt;，并配有&lt;code&gt;wasme&lt;/code&gt; CLI 工具，为 Wasm 扩展的开发提供了不错体验。本文主要介绍如何使用 Rust SDK 开发 Istio Wasm 扩展。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio】使用istioctl安装</title>
      <link>http://hbchen.com/post/servicemesh/2020-03-22-istio-install-istioctl/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2020-03-22-istio-install-istioctl/</guid>
      <description>&lt;p&gt;&lt;code&gt;istioctl&lt;/code&gt;是当前官方推荐的安装方式，相比&lt;code&gt;helm&lt;/code&gt;有更好的体验，但实践过程中也遇到些问题，在此对&lt;code&gt;1.5.0&lt;/code&gt;版本的使用做个整理。
包括默认安装、可观察性组件、外部Chart等自定义安装。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio源码】Citadel &amp; Node Agent</title>
      <link>http://hbchen.com/post/servicemesh/2020-01-07-istio-code-security/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2020-01-07-istio-code-security/</guid>
      <description>&lt;p&gt;Istio安全主要包括&lt;strong&gt;认证&lt;/strong&gt;和&lt;strong&gt;授权&lt;/strong&gt;，有关授权的&lt;code&gt;RBAC&lt;/code&gt;使用参考之前的文章&lt;a href=&#34;http://hbchen.com/post/servicemesh/2019-03-09-istio-rbac-quick-start/#1-开启授权-clusterrbacconfig&#34;&gt;【Istio安全】服务间访问控制-RBAC&lt;/a&gt;
，不过&lt;code&gt;RBAC&lt;/code&gt;已经&lt;a href=&#34;https://istio.io/docs/reference/config/security/istio.rbac.v1alpha1/&#34;&gt;准备废弃&lt;/a&gt;被&lt;code&gt;Authorization&lt;/code&gt;替代，
&lt;strong&gt;认证&lt;/strong&gt;则分为&lt;strong&gt;服务间身份验证&lt;/strong&gt;和&lt;strong&gt;来源身份认证&lt;/strong&gt;，服务间身份验证Istio提供了&lt;strong&gt;双向TLS&lt;/strong&gt;方案，其中涉及的秘钥管理服务，主要由&lt;code&gt;istio/security&lt;/code&gt;模块的
&lt;code&gt;Citadel&lt;/code&gt;和&lt;code&gt;Node Agent&lt;/code&gt;提供，本文主要分析这部分的源码实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【服务网格-gRPC】网关grpc-gateway</title>
      <link>http://hbchen.com/post/servicemesh/2019-08-30-mesh-grpc-01/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-08-30-mesh-grpc-01/</guid>
      <description>&lt;p&gt;在网格中使用&lt;code&gt;gRPC&lt;/code&gt;可以方便的定义服务，而当需要对外提供服务时往往&lt;code&gt;HTTP&lt;/code&gt;接口比较普遍，&lt;code&gt;grpc-gateway&lt;/code&gt;提供了&lt;code&gt;RESTful JSON API&lt;/code&gt;转&lt;code&gt;gRPC&lt;/code&gt;的代理服务。
在&lt;code&gt;mesh&lt;/code&gt;中&lt;code&gt;grpc-gateway&lt;/code&gt;的角色更像一个&lt;strong&gt;服务聚合层&lt;/strong&gt;，将内部&lt;code&gt;gRPC&lt;/code&gt;服务聚合并提供&lt;code&gt;HTTP&lt;/code&gt;接口服务，在使用的过程中也遇到些问题，如：进程内路由、Header映射等，这里结合使用经验做个总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio安全】网格边缘-Ingress</title>
      <link>http://hbchen.com/post/servicemesh/2019-05-11-istio-security-ingress/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-05-11-istio-security-ingress/</guid>
      <description>&lt;p&gt;接&lt;a href=&#34;(/post/servicemesh/2019-04-11-istio-security-egress/)&#34;&gt;【Istio安全】网格边缘-Egress&lt;/a&gt;继续网格边缘的实践&lt;code&gt;ingress-gateway&lt;/code&gt;，
分为&lt;strong&gt;HTTP&lt;/strong&gt;、&lt;strong&gt;HTTPS-不终止TLS&lt;/strong&gt;和&lt;strong&gt;HTTPS-种子TLS&lt;/strong&gt;三种场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio安全】网格边缘-Egress</title>
      <link>http://hbchen.com/post/servicemesh/2019-04-11-istio-security-egress/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-04-11-istio-security-egress/</guid>
      <description>&lt;p&gt;接上一篇《&lt;a href=&#34;http://hbchen.com/post/servicemesh/2019-03-09-istio-rbac-quick-start/&#34;&gt;【Istio安全】服务间访问控制-RBAC&lt;/a&gt;》，本文主要介绍网格边缘Egress相关的配置，&lt;code&gt;HTTP&lt;/code&gt;、&lt;code&gt;HTTPS&lt;/code&gt;以及&lt;code&gt;HTTP&lt;/code&gt;转&lt;code&gt;TLS&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio源码】Pilot Agent</title>
      <link>http://hbchen.com/post/servicemesh/2019-03-31-istio-code-pilot-agent/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-03-31-istio-code-pilot-agent/</guid>
      <description>&lt;p&gt;接上一篇&lt;a href=&#34;http://hbchen.com/post/servicemesh/2019-03-17-istio-code-pilot-discovery/&#34;&gt;《【Istio源码】Pilot Discovery》&lt;/a&gt;，这篇继续分析&lt;strong&gt;Pilot&lt;/strong&gt;的&lt;code&gt;pilot-agent&lt;/code&gt;模块。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio源码】Pilot Discovery</title>
      <link>http://hbchen.com/post/servicemesh/2019-03-17-istio-code-pilot-discovery/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-03-17-istio-code-pilot-discovery/</guid>
      <description>&lt;p&gt;流量管理是网格的基础，Pilot负责三个主要功能：服务治理&lt;code&gt;istio-pilot&lt;/code&gt;、Sidecar注入&lt;code&gt;istio-sidecar-injector&lt;/code&gt;、以及Sidecar&lt;code&gt;istio-proxy&lt;/code&gt;，
分别由三个模块负责：&lt;code&gt;pilot-discovery&lt;/code&gt;、&lt;code&gt;sidecar-injector&lt;/code&gt;、&lt;code&gt;pilot-agent&lt;/code&gt;，这里从&lt;code&gt;pilot-discovery&lt;/code&gt;开始。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio安全】服务间访问控制-RBAC</title>
      <link>http://hbchen.com/post/servicemesh/2019-03-09-istio-rbac-quick-start/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-03-09-istio-rbac-quick-start/</guid>
      <description>&lt;p&gt;Istio提供了非常易用的安全解决方案，包括服务间身份验证&lt;code&gt;mTLS&lt;/code&gt;，服务间访问控制&lt;code&gt;RBAC&lt;/code&gt;，以及终端用户身份验证&lt;code&gt;JWT&lt;/code&gt;等，本文主要介绍如何使用服务间访问控制，同时涉及&lt;code&gt;双向TLS&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio源码】Mixer</title>
      <link>http://hbchen.com/post/servicemesh/2019-03-17-istio-code-mixer/</link>
      <pubDate>Sun, 17 Mar 2019 17:23:52 +0800</pubDate>
      
      <guid>http://hbchen.com/post/servicemesh/2019-03-17-istio-code-mixer/</guid>
      <description>&lt;p&gt;Mixer模块为Istio提供了模块化可扩展的组件，将策略与遥测进行抽象，通过配置模型进行配置。在&lt;a href=&#34;http://hbchen.com/post/2019-03-05-custom-istio-mixer-adapter/&#34;&gt;《【Istio】自定义 Mixer Adapter示例教程(附源码)》&lt;/a&gt;中介绍了如何自定义一个Adapter，本文通过&lt;code&gt;mxier&lt;/code&gt;的源码分析，进一步了解适配器如何工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Istio】自定义 Mixer Adapter示例教程(附源码)</title>
      <link>http://hbchen.com/post/2019-03-05-custom-istio-mixer-adapter/</link>
      <pubDate>Tue, 05 Mar 2019 20:44:07 +0800</pubDate>
      
      <guid>http://hbchen.com/post/2019-03-05-custom-istio-mixer-adapter/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;快速开始:&lt;a href=&#34;https://github.com/hb-go/micro-mesh/tree/master/examples/adapter/auth&#34;&gt;micro-mesh/examples/adapter/auth&lt;/a&gt;源码传送门&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;研究Istio下构建简洁的微服务架构，对Istio的研究也更深入，自定义Mixer Adapter必不少，以下结合使用场景做一个自定义适配器的实践分享。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-micro加入Istio服务网格</title>
      <link>http://hbchen.com/post/2019-01-08-go-micro%E5%8A%A0%E5%85%A5istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/</link>
      <pubDate>Thu, 21 Feb 2019 16:59:37 +0800</pubDate>
      
      <guid>http://hbchen.com/post/2019-01-08-go-micro%E5%8A%A0%E5%85%A5istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/</guid>
      <description>&lt;p&gt;将go-micro服务加入service mesh，Client、Server不需要Registry、Selector、Transport等，通过自定义micro的server &amp;amp; client插件，去掉在istio中不需要的组件依赖。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>